// Copyright Â© 2022, Cisco Systems Inc.
// Use of this source code is governed by an MIT-style license that can be
// found in the LICENSE file or at https://opensource.org/licenses/MIT.

package build

import (
	"cto-github.cisco.com/NFV-BU/go-msx/exec"
	"gopkg.in/pipe.v2"
	"path/filepath"
	"strings"
)

func init() {
	AddTarget("install-vulnerability-deps", "Install Sonatype vulnerability cli tool", InstallVulnerabilityDeps)
	AddTarget("check-vulnerability", "Check Sonatype OSS for go module vulnerabilities", CheckVulnerabilities)
}

func InstallVulnerabilityDeps(_ []string) error {
	return exec.ExecutePipesStderr(pipe.Script(
		exec.Info("Downloading test dependencies"),
		goInstall("github.com/sonatype-nexus-community/nancy@latest"),
	))
}

func CheckVulnerabilities(_ []string) error {
	var resultsFile = filepath.Join(BuildConfig.DistPath(), "vulnerability.json")

	creds := make(map[string]string)
	if BuildConfig.Ossi.Username != "" {
		creds = map[string]string{
			"OSSI_USERNAME": BuildConfig.Ossi.Username,
			"OSSI_TOKEN":    BuildConfig.Ossi.Token,
		}
	}

	err := exec.ExecutePipesStderr(pipe.Line(
		pipe.MkDirAll(filepath.Dir(resultsFile), 0755),
		exec.ExecSimple("go", "list", "-json", "-deps", "./..."),
		exec.WithEnv(
			creds,
			exec.ExecSimple("nancy", "sleuth", "-o", "json"),
		),
		pipe.WriteFile(resultsFile, 0644),
	))

	if err != nil && strings.Contains(err.Error(), `command "nancy": exit status`) {
		return nil
	}
	return err
}
