// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	context "context"

	security "cto-github.cisco.com/NFV-BU/go-msx/security"
	mock "github.com/stretchr/testify/mock"
)

// TokenDetailsProvider is an autogenerated mock type for the TokenDetailsProvider type
type TokenDetailsProvider struct {
	mock.Mock
}

// IsTokenActive provides a mock function with given fields: ctx
func (_m *TokenDetailsProvider) IsTokenActive(ctx context.Context) (bool, error) {
	ret := _m.Called(ctx)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context) bool); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TokenDetails provides a mock function with given fields: ctx
func (_m *TokenDetailsProvider) TokenDetails(ctx context.Context) (*security.UserContextDetails, error) {
	ret := _m.Called(ctx)

	var r0 *security.UserContextDetails
	if rf, ok := ret.Get(0).(func(context.Context) *security.UserContextDetails); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*security.UserContextDetails)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
