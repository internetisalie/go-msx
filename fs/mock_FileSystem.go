// Code generated by mockery v2.14.0. DO NOT EDIT.

package fs

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// MockFileSystem is an autogenerated mock type for the FileSystem type
type MockFileSystem struct {
	mock.Mock
}

// Open provides a mock function with given fields: name
func (_m *MockFileSystem) Open(name string) (http.File, error) {
	ret := _m.Called(name)

	var r0 http.File
	if rf, ok := ret.Get(0).(func(string) http.File); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(http.File)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockFileSystem interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockFileSystem creates a new instance of MockFileSystem. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockFileSystem(t mockConstructorTestingTNewMockFileSystem) *MockFileSystem {
	mock := &MockFileSystem{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
