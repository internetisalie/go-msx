// Code generated by mockery v2.14.0. DO NOT EDIT.

package restops

import mock "github.com/stretchr/testify/mock"

// MockResponseObserver is an autogenerated mock type for the ResponseObserver type
type MockResponseObserver struct {
	mock.Mock
}

type MockResponseObserver_Expecter struct {
	mock *mock.Mock
}

func (_m *MockResponseObserver) EXPECT() *MockResponseObserver_Expecter {
	return &MockResponseObserver_Expecter{mock: &_m.Mock}
}

// Error provides a mock function with given fields: code, responseError
func (_m *MockResponseObserver) Error(code int, responseError error) {
	_m.Called(code, responseError)
}

// MockResponseObserver_Error_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Error'
type MockResponseObserver_Error_Call struct {
	*mock.Call
}

// Error is a helper method to define mock.On call
//  - code int
//  - responseError error
func (_e *MockResponseObserver_Expecter) Error(code interface{}, responseError interface{}) *MockResponseObserver_Error_Call {
	return &MockResponseObserver_Error_Call{Call: _e.mock.On("Error", code, responseError)}
}

func (_c *MockResponseObserver_Error_Call) Run(run func(code int, responseError error)) *MockResponseObserver_Error_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int), args[1].(error))
	})
	return _c
}

func (_c *MockResponseObserver_Error_Call) Return() *MockResponseObserver_Error_Call {
	_c.Call.Return()
	return _c
}

// Success provides a mock function with given fields: code
func (_m *MockResponseObserver) Success(code int) {
	_m.Called(code)
}

// MockResponseObserver_Success_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Success'
type MockResponseObserver_Success_Call struct {
	*mock.Call
}

// Success is a helper method to define mock.On call
//  - code int
func (_e *MockResponseObserver_Expecter) Success(code interface{}) *MockResponseObserver_Success_Call {
	return &MockResponseObserver_Success_Call{Call: _e.mock.On("Success", code)}
}

func (_c *MockResponseObserver_Success_Call) Run(run func(code int)) *MockResponseObserver_Success_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int))
	})
	return _c
}

func (_c *MockResponseObserver_Success_Call) Return() *MockResponseObserver_Success_Call {
	_c.Call.Return()
	return _c
}

type mockConstructorTestingTNewMockResponseObserver interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockResponseObserver creates a new instance of MockResponseObserver. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockResponseObserver(t mockConstructorTestingTNewMockResponseObserver) *MockResponseObserver {
	mock := &MockResponseObserver{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
