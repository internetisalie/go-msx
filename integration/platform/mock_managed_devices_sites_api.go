// Code generated by mockery v2.3.0. DO NOT EDIT.

package platform

import (
	context "context"
	http "net/http"

	mock "github.com/stretchr/testify/mock"

	msx_platform_client "cto-github.cisco.com/NFV-BU/msx-platform-go-client"
)

// MockManagedDevicesSitesApi is an autogenerated mock type for the ManagedDevicesSitesApi type
type MockManagedDevicesSitesApi struct {
	mock.Mock
}

// GetManagedDeviceSites provides a mock function with given fields: ctx, localVarOptionals
func (_m *MockManagedDevicesSitesApi) GetManagedDeviceSites(ctx context.Context, localVarOptionals *msx_platform_client.GetManagedDeviceSitesOpts) ([]msx_platform_client.ManagedDeviceSiteDto, *http.Response, error) {
	ret := _m.Called(ctx, localVarOptionals)

	var r0 []msx_platform_client.ManagedDeviceSiteDto
	if rf, ok := ret.Get(0).(func(context.Context, *msx_platform_client.GetManagedDeviceSitesOpts) []msx_platform_client.ManagedDeviceSiteDto); ok {
		r0 = rf(ctx, localVarOptionals)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]msx_platform_client.ManagedDeviceSiteDto)
		}
	}

	var r1 *http.Response
	if rf, ok := ret.Get(1).(func(context.Context, *msx_platform_client.GetManagedDeviceSitesOpts) *http.Response); ok {
		r1 = rf(ctx, localVarOptionals)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, *msx_platform_client.GetManagedDeviceSitesOpts) error); ok {
		r2 = rf(ctx, localVarOptionals)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
