// Code generated by mockery v2.3.0. DO NOT EDIT.

package platform

import (
	context "context"
	http "net/http"

	mock "github.com/stretchr/testify/mock"

	msx_platform_client "cto-github.cisco.com/NFV-BU/msx-platform-go-client"
)

// MockManagedDeviceTemplatesApi is an autogenerated mock type for the ManagedDeviceTemplatesApi type
type MockManagedDeviceTemplatesApi struct {
	mock.Mock
}

// CreateManagedDeviceTemplate provides a mock function with given fields: ctx, managedDeviceTemplateDto
func (_m *MockManagedDeviceTemplatesApi) CreateManagedDeviceTemplate(ctx context.Context, managedDeviceTemplateDto msx_platform_client.ManagedDeviceTemplateDto) (msx_platform_client.ManagedDeviceTemplateDto, *http.Response, error) {
	ret := _m.Called(ctx, managedDeviceTemplateDto)

	var r0 msx_platform_client.ManagedDeviceTemplateDto
	if rf, ok := ret.Get(0).(func(context.Context, msx_platform_client.ManagedDeviceTemplateDto) msx_platform_client.ManagedDeviceTemplateDto); ok {
		r0 = rf(ctx, managedDeviceTemplateDto)
	} else {
		r0 = ret.Get(0).(msx_platform_client.ManagedDeviceTemplateDto)
	}

	var r1 *http.Response
	if rf, ok := ret.Get(1).(func(context.Context, msx_platform_client.ManagedDeviceTemplateDto) *http.Response); ok {
		r1 = rf(ctx, managedDeviceTemplateDto)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, msx_platform_client.ManagedDeviceTemplateDto) error); ok {
		r2 = rf(ctx, managedDeviceTemplateDto)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GetManagedDeviceTemplatesList provides a mock function with given fields: ctx
func (_m *MockManagedDeviceTemplatesApi) GetManagedDeviceTemplatesList(ctx context.Context) ([]msx_platform_client.ManagedDeviceTemplateDto, *http.Response, error) {
	ret := _m.Called(ctx)

	var r0 []msx_platform_client.ManagedDeviceTemplateDto
	if rf, ok := ret.Get(0).(func(context.Context) []msx_platform_client.ManagedDeviceTemplateDto); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]msx_platform_client.ManagedDeviceTemplateDto)
		}
	}

	var r1 *http.Response
	if rf, ok := ret.Get(1).(func(context.Context) *http.Response); ok {
		r1 = rf(ctx)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context) error); ok {
		r2 = rf(ctx)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
