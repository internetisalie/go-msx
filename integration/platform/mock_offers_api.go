// Code generated by mockery v2.3.0. DO NOT EDIT.

package platform

import (
	context "context"
	http "net/http"

	mock "github.com/stretchr/testify/mock"

	msx_platform_client "cto-github.cisco.com/NFV-BU/msx-platform-go-client"
)

// MockOffersApi is an autogenerated mock type for the OffersApi type
type MockOffersApi struct {
	mock.Mock
}

// CreateOffer provides a mock function with given fields: ctx, offerCreate
func (_m *MockOffersApi) CreateOffer(ctx context.Context, offerCreate msx_platform_client.OfferCreate) (msx_platform_client.Offer, *http.Response, error) {
	ret := _m.Called(ctx, offerCreate)

	var r0 msx_platform_client.Offer
	if rf, ok := ret.Get(0).(func(context.Context, msx_platform_client.OfferCreate) msx_platform_client.Offer); ok {
		r0 = rf(ctx, offerCreate)
	} else {
		r0 = ret.Get(0).(msx_platform_client.Offer)
	}

	var r1 *http.Response
	if rf, ok := ret.Get(1).(func(context.Context, msx_platform_client.OfferCreate) *http.Response); ok {
		r1 = rf(ctx, offerCreate)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, msx_platform_client.OfferCreate) error); ok {
		r2 = rf(ctx, offerCreate)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// DeleteOffer provides a mock function with given fields: ctx, id
func (_m *MockOffersApi) DeleteOffer(ctx context.Context, id string) (*http.Response, error) {
	ret := _m.Called(ctx, id)

	var r0 *http.Response
	if rf, ok := ret.Get(0).(func(context.Context, string) *http.Response); ok {
		r0 = rf(ctx, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*http.Response)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetOffer provides a mock function with given fields: ctx, id
func (_m *MockOffersApi) GetOffer(ctx context.Context, id string) (msx_platform_client.Offer, *http.Response, error) {
	ret := _m.Called(ctx, id)

	var r0 msx_platform_client.Offer
	if rf, ok := ret.Get(0).(func(context.Context, string) msx_platform_client.Offer); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Get(0).(msx_platform_client.Offer)
	}

	var r1 *http.Response
	if rf, ok := ret.Get(1).(func(context.Context, string) *http.Response); ok {
		r1 = rf(ctx, id)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, string) error); ok {
		r2 = rf(ctx, id)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GetOffersCount provides a mock function with given fields: ctx, localVarOptionals
func (_m *MockOffersApi) GetOffersCount(ctx context.Context, localVarOptionals *msx_platform_client.GetOffersCountOpts) (int64, *http.Response, error) {
	ret := _m.Called(ctx, localVarOptionals)

	var r0 int64
	if rf, ok := ret.Get(0).(func(context.Context, *msx_platform_client.GetOffersCountOpts) int64); ok {
		r0 = rf(ctx, localVarOptionals)
	} else {
		r0 = ret.Get(0).(int64)
	}

	var r1 *http.Response
	if rf, ok := ret.Get(1).(func(context.Context, *msx_platform_client.GetOffersCountOpts) *http.Response); ok {
		r1 = rf(ctx, localVarOptionals)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, *msx_platform_client.GetOffersCountOpts) error); ok {
		r2 = rf(ctx, localVarOptionals)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GetOffersPage provides a mock function with given fields: ctx, page, pageSize, localVarOptionals
func (_m *MockOffersApi) GetOffersPage(ctx context.Context, page int32, pageSize int32, localVarOptionals *msx_platform_client.GetOffersPageOpts) (msx_platform_client.OffersPage, *http.Response, error) {
	ret := _m.Called(ctx, page, pageSize, localVarOptionals)

	var r0 msx_platform_client.OffersPage
	if rf, ok := ret.Get(0).(func(context.Context, int32, int32, *msx_platform_client.GetOffersPageOpts) msx_platform_client.OffersPage); ok {
		r0 = rf(ctx, page, pageSize, localVarOptionals)
	} else {
		r0 = ret.Get(0).(msx_platform_client.OffersPage)
	}

	var r1 *http.Response
	if rf, ok := ret.Get(1).(func(context.Context, int32, int32, *msx_platform_client.GetOffersPageOpts) *http.Response); ok {
		r1 = rf(ctx, page, pageSize, localVarOptionals)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, int32, int32, *msx_platform_client.GetOffersPageOpts) error); ok {
		r2 = rf(ctx, page, pageSize, localVarOptionals)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// UpdateOffer provides a mock function with given fields: ctx, id, offerUpdate
func (_m *MockOffersApi) UpdateOffer(ctx context.Context, id string, offerUpdate msx_platform_client.OfferUpdate) (msx_platform_client.Offer, *http.Response, error) {
	ret := _m.Called(ctx, id, offerUpdate)

	var r0 msx_platform_client.Offer
	if rf, ok := ret.Get(0).(func(context.Context, string, msx_platform_client.OfferUpdate) msx_platform_client.Offer); ok {
		r0 = rf(ctx, id, offerUpdate)
	} else {
		r0 = ret.Get(0).(msx_platform_client.Offer)
	}

	var r1 *http.Response
	if rf, ok := ret.Get(1).(func(context.Context, string, msx_platform_client.OfferUpdate) *http.Response); ok {
		r1 = rf(ctx, id, offerUpdate)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*http.Response)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, string, msx_platform_client.OfferUpdate) error); ok {
		r2 = rf(ctx, id, offerUpdate)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
