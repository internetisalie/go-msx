// Code generated by mockery v2.3.0. DO NOT EDIT.

package ipam

import (
	integration "cto-github.cisco.com/NFV-BU/go-msx/integration"
	mock "github.com/stretchr/testify/mock"

	net "net"

	types "cto-github.cisco.com/NFV-BU/go-msx/types"
)

// MockApi is an autogenerated mock type for the Api type
type MockApi struct {
	mock.Mock
}

// AquireIP provides a mock function with given fields: requestCIDR
func (_m *MockApi) AquireIP(requestCIDR IpamCIDRRequest) (*integration.MsxResponse, error) {
	ret := _m.Called(requestCIDR)

	var r0 *integration.MsxResponse
	if rf, ok := ret.Get(0).(func(IpamCIDRRequest) *integration.MsxResponse); ok {
		r0 = rf(requestCIDR)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*integration.MsxResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(IpamCIDRRequest) error); ok {
		r1 = rf(requestCIDR)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCIDRs provides a mock function with given fields: page, pageSize, tenantId
func (_m *MockApi) GetCIDRs(page int, pageSize int, tenantId types.UUID) (*integration.MsxResponse, error) {
	ret := _m.Called(page, pageSize, tenantId)

	var r0 *integration.MsxResponse
	if rf, ok := ret.Get(0).(func(int, int, types.UUID) *integration.MsxResponse); ok {
		r0 = rf(page, pageSize, tenantId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*integration.MsxResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int, int, types.UUID) error); ok {
		r1 = rf(page, pageSize, tenantId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RegisterCIDR provides a mock function with given fields: requestCIDR
func (_m *MockApi) RegisterCIDR(requestCIDR IpamCIDRRequest) (*integration.MsxResponse, error) {
	ret := _m.Called(requestCIDR)

	var r0 *integration.MsxResponse
	if rf, ok := ret.Get(0).(func(IpamCIDRRequest) *integration.MsxResponse); ok {
		r0 = rf(requestCIDR)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*integration.MsxResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(IpamCIDRRequest) error); ok {
		r1 = rf(requestCIDR)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ReleaseIP provides a mock function with given fields: cidr, ipAddress, tenantId
func (_m *MockApi) ReleaseIP(cidr net.IPNet, ipAddress net.IP, tenantId types.UUID) (*integration.MsxResponse, error) {
	ret := _m.Called(cidr, ipAddress, tenantId)

	var r0 *integration.MsxResponse
	if rf, ok := ret.Get(0).(func(net.IPNet, net.IP, types.UUID) *integration.MsxResponse); ok {
		r0 = rf(cidr, ipAddress, tenantId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*integration.MsxResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(net.IPNet, net.IP, types.UUID) error); ok {
		r1 = rf(cidr, ipAddress, tenantId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
